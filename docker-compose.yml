services:
  kafka:
    image: bitnami/kafka:3.3.2
    restart: unless-stopped
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER

  postgres:
    image: postgres:16.3-alpine3.20
    ports:
      - 5432:5432
    restart: unless-stopped
    # TODO we should probably set a volume here :-)
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ywh_scraped_data

  influxdb:
    image: influxdb:2.7.6
    # TODO we should probably set a volume here :-)
    ports:
      - 8086:8086
    restart: unless-stopped
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: influxdb
      DOCKER_INFLUXDB_INIT_PASSWORD: influxdb
      DOCKER_INFLUXDB_INIT_ORG: program_reports_count
      DOCKER_INFLUXDB_INIT_BUCKET: program_reports_count
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: influxdb-token

  crawler:
    build: src/
    entrypoint: "python -u main.py -crawler"
    restart: unless-stopped
    environment:
      CRAWL_INTERVAL_SECONDS: 120
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_TOPIC: program_reports_count
      KAFKA_NB_PARTITIONS: 3 # adjust to at least the number of consumer replicas.
      YWH_API_URL: https://api.yeswehack.com

  consumer:
    build: src/
    entrypoint: "python -u main.py -consumer"
    restart: unless-stopped
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_TOPIC: program_reports_count
      POSTGRESQL_URL: postgresql+psycopg2://postgres:postgres@postgres:5432/ywh_scraped_data
      INFLUXDB_URL: http://influxdb:8086
      INFLUXDB_USERNAME: influxdb
      INFLUXDB_PASSWORD: influxdb
      INFLUXDB_ORG: program_reports_count
      INFLUXDB_BUCKET: program_reports_count
    deploy:
      replicas: 3

  grafana:
    image: grafana/grafana:11.0.0
    restart: unless-stopped
    volumes:
      # - ./grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      # - ./grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards/
      - ./grafana/datasources:/etc/grafana/provisioning/datasources/
    ports:
      - 3000:3000
